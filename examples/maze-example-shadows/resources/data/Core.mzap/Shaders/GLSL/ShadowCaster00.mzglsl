//////////////////////////////////////////
// Vertex Shader
//
//////////////////////////////////////////
#type vertex

//////////////////////////////////////////
#include "Utils/PrecisionHigh.mzglsl"
#include "Utils/Vertex.mzglsl"


//////////////////////////////////////////
IN vec3 a_position;
IN vec3 a_normal;
IN vec3 a_color;
IN vec2 a_texCoords0;


//////////////////////////////////////////
OUT vec3 v_positionOS;
OUT vec3 v_positionWS;
OUT vec3 v_positionVS;
OUT vec3 v_normalOS;
OUT vec3 v_normalWS;


//////////////////////////////////////////
#include "Utils/Core.mzglsl"


//////////////////////////////////////////
// Main
void main()
{
    
    int instanceId = gl_InstanceID;
    
    mat4 modelMatrix = GetModelMatrix(instanceId);
    mat4 viewMatrix = GetViewMatrix();

    vec4 positionOS = vec4(a_position, 1.0);
    vec4 positionWS = modelMatrix * positionOS;
    MAZE_CLIP_DISTANCE_VERTEX(positionWS);
    vec4 positionVS = viewMatrix * positionWS;
    vec4 positionCS = u_projectionMatrix * positionVS;
    
#if (MAZE_LHCS)
    positionCS.z = -positionCS.z;
#endif
    
    v_positionOS = positionOS.xyz;
    v_positionWS = positionWS.xyz;
    v_positionVS = positionVS.xyz;

    gl_Position = positionCS;
}


//////////////////////////////////////////
// Fragment Shader
//
//////////////////////////////////////////
#type fragment

//////////////////////////////////////////
#include "Utils/PrecisionHigh.mzglsl"
#include "Utils/Fragment.mzglsl"


//////////////////////////////////////////
// Main
void main()
{
}
